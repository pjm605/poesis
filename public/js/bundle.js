'use strict';

var app = angular.module('myApp', ['ui.router', 'ngMessages']);

app.run(function ($rootScope, $window) {
  $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {
    console.error('Error transitioning from "' + fromState.name + '" to "' + toState.name + '":', error);
  });

  $rootScope.goBack = function () {
    $window.history.back();
  };
});

app.controller('MainCtrl', function ($scope) {
  $scope.poem = { line: 0, word: "" };
  $scope.onSpace = function ($event) {
    console.log("on space event triggered");
    console.log($scope.poem.input);
  };
  $scope.onEnter = function ($event) {
    console.log("onEnter event triggered");
  };
  $scope.updateWord = function () {};
});

app.factory('SoundcountFactory', function ($http) {

  return {
    getSoundcount: function getSoundcount(word) {
      var newWord = word.replace(/[^A-Za-z ]+/g, '');
      newWord = newWord.split(" ");

      var soundDic = {};

      for (var i = 0; i < newWord.length; i++) {
        if (soundDic.hasOwnProperty(newWord[i]) === false) soundDic[newWord[i]] = 1;else soundDic[newWord[i]] += 1;
      }

      return soundDic;
    }
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsIm1haW4uY29udHJvbGxlcnMuanMiLCJzb3VuZENvdW50LmZhY3RvcnkuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsInJ1biIsIiRyb290U2NvcGUiLCIkd2luZG93IiwiJG9uIiwiZXZlbnQiLCJ0b1N0YXRlIiwidG9QYXJhbXMiLCJmcm9tU3RhdGUiLCJmcm9tUGFyYW1zIiwiZXJyb3IiLCJjb25zb2xlIiwibmFtZSIsImdvQmFjayIsImhpc3RvcnkiLCJiYWNrIiwiY29udHJvbGxlciIsIiRzY29wZSIsInBvZW0iLCJsaW5lIiwid29yZCIsIm9uU3BhY2UiLCIkZXZlbnQiLCJsb2ciLCJpbnB1dCIsIm9uRW50ZXIiLCJ1cGRhdGVXb3JkIiwiZmFjdG9yeSIsIiRodHRwIiwiZ2V0U291bmRjb3VudCIsIm5ld1dvcmQiLCJyZXBsYWNlIiwic3BsaXQiLCJzb3VuZERpYyIsImkiLCJsZW5ndGgiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBQUEsTUFBQUMsUUFBQUMsTUFBQSxDQUFBLE9BQUEsRUFBQSxDQUFBLFdBQUEsRUFBQSxZQUFBLENBQUEsQ0FBQTs7QUFFQUYsSUFBQUcsR0FBQSxDQUFBLFVBQUFDLFVBQUEsRUFBQUMsT0FBQSxFQUFBO0FBQ0FELGFBQUFFLEdBQUEsQ0FBQSxtQkFBQSxFQUFBLFVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsVUFBQSxFQUFBQyxLQUFBLEVBQUE7QUFDQUMsWUFBQUQsS0FBQSxDQUFBLCtCQUFBRixVQUFBSSxJQUFBLEdBQUEsUUFBQSxHQUFBTixRQUFBTSxJQUFBLEdBQUEsSUFBQSxFQUFBRixLQUFBO0FBQ0EsR0FGQTs7QUFJQVIsYUFBQVcsTUFBQSxHQUFBLFlBQUE7QUFDQVYsWUFBQVcsT0FBQSxDQUFBQyxJQUFBO0FBQ0EsR0FGQTtBQUlBLENBVEE7O0FDSkFqQixJQUFBa0IsVUFBQSxDQUFBLFVBQUEsRUFBQSxVQUFBQyxNQUFBLEVBQUE7QUFDQUEsU0FBQUMsSUFBQSxHQUFBLEVBQUFDLE1BQUEsQ0FBQSxFQUFBQyxNQUFBLEVBQUEsRUFBQTtBQUNBSCxTQUFBSSxPQUFBLEdBQUEsVUFBQUMsTUFBQSxFQUFBO0FBQ0FYLFlBQUFZLEdBQUEsQ0FBQSwwQkFBQTtBQUNBWixZQUFBWSxHQUFBLENBQUFOLE9BQUFDLElBQUEsQ0FBQU0sS0FBQTtBQUNBLEdBSEE7QUFJQVAsU0FBQVEsT0FBQSxHQUFBLFVBQUFILE1BQUEsRUFBQTtBQUNBWCxZQUFBWSxHQUFBLENBQUEseUJBQUE7QUFDQSxHQUZBO0FBR0FOLFNBQUFTLFVBQUEsR0FBQSxZQUFBLENBRUEsQ0FGQTtBQUdBLENBWkE7O0FDQUE1QixJQUFBNkIsT0FBQSxDQUFBLG1CQUFBLEVBQUEsVUFBQUMsS0FBQSxFQUFBOztBQUdBLFNBQUE7QUFDQUMsbUJBQUEsdUJBQUFULElBQUEsRUFBQTtBQUNBLFVBQUFVLFVBQUFWLEtBQUFXLE9BQUEsQ0FBQSxjQUFBLEVBQUEsRUFBQSxDQUFBO0FBQ0FELGdCQUFBQSxRQUFBRSxLQUFBLENBQUEsR0FBQSxDQUFBOztBQUVBLFVBQUFDLFdBQUEsRUFBQTs7QUFFQSxXQUFBLElBQUFDLElBQUEsQ0FBQSxFQUFBQSxJQUFBSixRQUFBSyxNQUFBLEVBQUFELEdBQUEsRUFBQTtBQUNBLFlBQUFELFNBQUFHLGNBQUEsQ0FBQU4sUUFBQUksQ0FBQSxDQUFBLE1BQUEsS0FBQSxFQUFBRCxTQUFBSCxRQUFBSSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsS0FDQUQsU0FBQUgsUUFBQUksQ0FBQSxDQUFBLEtBQUEsQ0FBQTtBQUNBOztBQUVBLGFBQUFELFFBQUE7QUFDQTtBQWJBLEdBQUE7QUFnQkEsQ0FuQkEiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ215QXBwJywgWyd1aS5yb3V0ZXInLCAnbmdNZXNzYWdlcyddKTtcblxuYXBwLnJ1bihmdW5jdGlvbiAoJHJvb3RTY29wZSwgJHdpbmRvdykge1xuICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlRXJyb3InLCBmdW5jdGlvbiAoZXZlbnQsIHRvU3RhdGUsIHRvUGFyYW1zLCBmcm9tU3RhdGUsIGZyb21QYXJhbXMsIGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgdHJhbnNpdGlvbmluZyBmcm9tIFwiJyArIGZyb21TdGF0ZS5uYW1lICsgJ1wiIHRvIFwiJyArIHRvU3RhdGUubmFtZSArICdcIjonLCBlcnJvcik7XG4gIH0pO1xuXG4gICRyb290U2NvcGUuZ29CYWNrID0gZnVuY3Rpb24gKCkge1xuICAgICR3aW5kb3cuaGlzdG9yeS5iYWNrKClcbiAgfTtcblxufSk7XG4iLCJhcHAuY29udHJvbGxlcignTWFpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUpIHtcbiAgJHNjb3BlLnBvZW0gPSB7bGluZTogMCwgd29yZDogXCJcIn07XG4gICRzY29wZS5vblNwYWNlID0gZnVuY3Rpb24gKCRldmVudCkge1xuICAgIGNvbnNvbGUubG9nKFwib24gc3BhY2UgZXZlbnQgdHJpZ2dlcmVkXCIpO1xuICAgIGNvbnNvbGUubG9nKCRzY29wZS5wb2VtLmlucHV0KTtcbiAgfVxuICAkc2NvcGUub25FbnRlciA9IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICBjb25zb2xlLmxvZyhcIm9uRW50ZXIgZXZlbnQgdHJpZ2dlcmVkXCIpO1xuICB9XG4gICRzY29wZS51cGRhdGVXb3JkID0gZnVuY3Rpb24gKCkge1xuICAgIFxuICB9XG59KTtcbiIsImFwcC5mYWN0b3J5KCdTb3VuZGNvdW50RmFjdG9yeScsIGZ1bmN0aW9uICgkaHR0cCkge1xuXG5cbiAgcmV0dXJuIHtcbiAgICBnZXRTb3VuZGNvdW50OiBmdW5jdGlvbiAod29yZCkge1xuICAgICAgdmFyIG5ld1dvcmQgPSB3b3JkLnJlcGxhY2UoL1teQS1aYS16IF0rL2csICcnKVxuICAgICAgbmV3V29yZCA9IG5ld1dvcmQuc3BsaXQoXCIgXCIpO1xuXG4gICAgICB2YXIgc291bmREaWMgPSB7fTtcblxuICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZXdXb3JkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmKHNvdW5kRGljLmhhc093blByb3BlcnR5KG5ld1dvcmRbaV0pID09PSBmYWxzZSkgc291bmREaWNbbmV3V29yZFtpXV0gPSAxXG4gICAgICAgIGVsc2Ugc291bmREaWNbbmV3V29yZFtpXV0gKz0gMSAgXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzb3VuZERpY1xuICAgIH1cbiAgfTtcblxufSk7XG5cblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
