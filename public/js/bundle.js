'use strict';

var app = angular.module('myApp', ['ui.router', 'ngMessages']);

app.run(function ($rootScope, $window) {
  $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {
    console.error('Error transitioning from "' + fromState.name + '" to "' + toState.name + '":', error);
  });

  $rootScope.goBack = function () {
    $window.history.back();
  };
});

app.controller('MainCtrl', function ($scope) {
  $scope.poem = { line: 0, word: "" };

  $scope.onSpace = function ($event) {
    console.log("on space event triggered");
    console.log($scope.poem.input);
  };
  $scope.onEnter = function ($event) {
    console.log("onEnter event triggered");
  };
  $scope.updateWord = function () {};
});

app.factory('SoundcountFactory', function ($http) {

  return {
    getSoundcount: function getSoundcount(word) {
      var newWord = word.replace(/[^A-Za-z ]+/g, '');
      newWord = newWord.split(" ");

      var soundDic = {};

      for (var i = 0; i < newWord.length; i++) {
        if (soundDic.hasOwnProperty(newWord[i]) === false) soundDic[newWord[i]] = 1;else soundDic[newWord[i]] += 1;
      }

      return soundDic;
    }
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsIm1haW4uY29udHJvbGxlcnMuanMiLCJzb3VuZENvdW50LmZhY3RvcnkuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsInJ1biIsIiRyb290U2NvcGUiLCIkd2luZG93IiwiJG9uIiwiZXZlbnQiLCJ0b1N0YXRlIiwidG9QYXJhbXMiLCJmcm9tU3RhdGUiLCJmcm9tUGFyYW1zIiwiZXJyb3IiLCJjb25zb2xlIiwibmFtZSIsImdvQmFjayIsImhpc3RvcnkiLCJiYWNrIiwiY29udHJvbGxlciIsIiRzY29wZSIsInBvZW0iLCJsaW5lIiwid29yZCIsIm9uU3BhY2UiLCIkZXZlbnQiLCJsb2ciLCJpbnB1dCIsIm9uRW50ZXIiLCJ1cGRhdGVXb3JkIiwiZmFjdG9yeSIsIiRodHRwIiwiZ2V0U291bmRjb3VudCIsIm5ld1dvcmQiLCJyZXBsYWNlIiwic3BsaXQiLCJzb3VuZERpYyIsImkiLCJsZW5ndGgiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBQUEsTUFBQUMsUUFBQUMsTUFBQSxDQUFBLE9BQUEsRUFBQSxDQUFBLFdBQUEsRUFBQSxZQUFBLENBQUEsQ0FBQTs7QUFFQUYsSUFBQUcsR0FBQSxDQUFBLFVBQUFDLFVBQUEsRUFBQUMsT0FBQSxFQUFBO0FBQ0FELGFBQUFFLEdBQUEsQ0FBQSxtQkFBQSxFQUFBLFVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsVUFBQSxFQUFBQyxLQUFBLEVBQUE7QUFDQUMsWUFBQUQsS0FBQSxDQUFBLCtCQUFBRixVQUFBSSxJQUFBLEdBQUEsUUFBQSxHQUFBTixRQUFBTSxJQUFBLEdBQUEsSUFBQSxFQUFBRixLQUFBO0FBQ0EsR0FGQTs7QUFJQVIsYUFBQVcsTUFBQSxHQUFBLFlBQUE7QUFDQVYsWUFBQVcsT0FBQSxDQUFBQyxJQUFBO0FBQ0EsR0FGQTtBQUlBLENBVEE7O0FDSkFqQixJQUFBa0IsVUFBQSxDQUFBLFVBQUEsRUFBQSxVQUFBQyxNQUFBLEVBQUE7QUFDQUEsU0FBQUMsSUFBQSxHQUFBLEVBQUFDLE1BQUEsQ0FBQSxFQUFBQyxNQUFBLEVBQUEsRUFBQTs7QUFFQUgsU0FBQUksT0FBQSxHQUFBLFVBQUFDLE1BQUEsRUFBQTtBQUNBWCxZQUFBWSxHQUFBLENBQUEsMEJBQUE7QUFDQVosWUFBQVksR0FBQSxDQUFBTixPQUFBQyxJQUFBLENBQUFNLEtBQUE7QUFDQSxHQUhBO0FBSUFQLFNBQUFRLE9BQUEsR0FBQSxVQUFBSCxNQUFBLEVBQUE7QUFDQVgsWUFBQVksR0FBQSxDQUFBLHlCQUFBO0FBQ0EsR0FGQTtBQUdBTixTQUFBUyxVQUFBLEdBQUEsWUFBQSxDQUVBLENBRkE7QUFHQSxDQWJBOztBQ0FBNUIsSUFBQTZCLE9BQUEsQ0FBQSxtQkFBQSxFQUFBLFVBQUFDLEtBQUEsRUFBQTs7QUFHQSxTQUFBO0FBQ0FDLG1CQUFBLHVCQUFBVCxJQUFBLEVBQUE7QUFDQSxVQUFBVSxVQUFBVixLQUFBVyxPQUFBLENBQUEsY0FBQSxFQUFBLEVBQUEsQ0FBQTtBQUNBRCxnQkFBQUEsUUFBQUUsS0FBQSxDQUFBLEdBQUEsQ0FBQTs7QUFFQSxVQUFBQyxXQUFBLEVBQUE7O0FBRUEsV0FBQSxJQUFBQyxJQUFBLENBQUEsRUFBQUEsSUFBQUosUUFBQUssTUFBQSxFQUFBRCxHQUFBLEVBQUE7QUFDQSxZQUFBRCxTQUFBRyxjQUFBLENBQUFOLFFBQUFJLENBQUEsQ0FBQSxNQUFBLEtBQUEsRUFBQUQsU0FBQUgsUUFBQUksQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEtBQ0FELFNBQUFILFFBQUFJLENBQUEsQ0FBQSxLQUFBLENBQUE7QUFDQTs7QUFFQSxhQUFBRCxRQUFBO0FBQ0E7QUFiQSxHQUFBO0FBZ0JBLENBbkJBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdteUFwcCcsIFsndWkucm91dGVyJywgJ25nTWVzc2FnZXMnXSk7XG5cbmFwcC5ydW4oZnVuY3Rpb24gKCRyb290U2NvcGUsICR3aW5kb3cpIHtcbiAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZUVycm9yJywgZnVuY3Rpb24gKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zLCBlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHRyYW5zaXRpb25pbmcgZnJvbSBcIicgKyBmcm9tU3RhdGUubmFtZSArICdcIiB0byBcIicgKyB0b1N0YXRlLm5hbWUgKyAnXCI6JywgZXJyb3IpO1xuICB9KTtcblxuICAkcm9vdFNjb3BlLmdvQmFjayA9IGZ1bmN0aW9uICgpIHtcbiAgICAkd2luZG93Lmhpc3RvcnkuYmFjaygpXG4gIH07XG5cbn0pO1xuIiwiYXBwLmNvbnRyb2xsZXIoJ01haW5DdHJsJywgZnVuY3Rpb24oJHNjb3BlKSB7XG4gICRzY29wZS5wb2VtID0ge2xpbmU6IDAsIHdvcmQ6IFwiXCJ9O1xuICBcbiAgJHNjb3BlLm9uU3BhY2UgPSBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgY29uc29sZS5sb2coXCJvbiBzcGFjZSBldmVudCB0cmlnZ2VyZWRcIik7XG4gICAgY29uc29sZS5sb2coJHNjb3BlLnBvZW0uaW5wdXQpO1xuICB9XG4gICRzY29wZS5vbkVudGVyID0gZnVuY3Rpb24gKCRldmVudCkge1xuICAgIGNvbnNvbGUubG9nKFwib25FbnRlciBldmVudCB0cmlnZ2VyZWRcIik7XG4gIH1cbiAgJHNjb3BlLnVwZGF0ZVdvcmQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgfVxufSk7XG4iLCJhcHAuZmFjdG9yeSgnU291bmRjb3VudEZhY3RvcnknLCBmdW5jdGlvbiAoJGh0dHApIHtcblxuXG4gIHJldHVybiB7XG4gICAgZ2V0U291bmRjb3VudDogZnVuY3Rpb24gKHdvcmQpIHtcbiAgICAgIHZhciBuZXdXb3JkID0gd29yZC5yZXBsYWNlKC9bXkEtWmEteiBdKy9nLCAnJylcbiAgICAgIG5ld1dvcmQgPSBuZXdXb3JkLnNwbGl0KFwiIFwiKTtcblxuICAgICAgdmFyIHNvdW5kRGljID0ge307XG5cbiAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3V29yZC5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZihzb3VuZERpYy5oYXNPd25Qcm9wZXJ0eShuZXdXb3JkW2ldKSA9PT0gZmFsc2UpIHNvdW5kRGljW25ld1dvcmRbaV1dID0gMVxuICAgICAgICBlbHNlIHNvdW5kRGljW25ld1dvcmRbaV1dICs9IDEgIFxuICAgICAgfVxuXG4gICAgICByZXR1cm4gc291bmREaWNcbiAgICB9XG4gIH07XG5cbn0pO1xuXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
